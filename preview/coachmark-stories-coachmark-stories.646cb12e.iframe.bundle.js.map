{"version":3,"file":"coachmark-stories-coachmark-stories.646cb12e.iframe.bundle.js","mappings":";;;AAsCA;AASA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;;ACzCA;;;AAOA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;;;;AAIA;AACA;;AAQA","sources":["webpack://@spectrum-css/preview/../../components/button/stories/template.js","webpack://@spectrum-css/preview/../../components/coachmark/stories/template.js"],"sourcesContent":["import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { lowerCase, capitalize } from \"lodash-es\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n  rootClass = \"spectrum-Button\",\n  id,\n  customClasses = [],\n  size = \"m\",\n  label,\n  hideLabel = false,\n  iconName,\n  variant,\n  staticColor,\n  treatment,\n  onclick,\n  isDisabled = false,\n  ariaExpanded,\n  ariaControls,\n  ...globals\n}) => {\n\tconst { express } = globals;\n\ttry {\n\t\tif (express) import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n  return html`\n    <button\n      class=${classMap({\n        [rootClass]: true,\n        [`${rootClass}--${treatment}`]: typeof treatment !== \"undefined\",\n        [`${rootClass}--${variant}`]: typeof variant !== \"undefined\",\n        [`${rootClass}--size${size?.toUpperCase()}`]: typeof size !== \"undefined\",\n        [`${rootClass}--static${capitalize(lowerCase(staticColor))}`]: typeof staticColor !== \"undefined\",\n        [`${rootClass}--iconOnly`]: hideLabel,\n        ...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n      })}\n      id=${ifDefined(id)}\n      ?disabled=${isDisabled}\n      @click=${onclick}\n      aria-label=${ifDefined(hideLabel ? iconName : undefined)}\n      aria-expanded=${ifDefined(ariaExpanded?.toString())}\n      aria-controls=${ifDefined(ariaControls)}\n    >\n      ${when(iconName, () => Icon({ ...globals, iconName, size }))}\n      ${when(label && !hideLabel,\n        () => html`<span class=${`${rootClass}-label`}>${label}</span>`\n      )}\n    </button>\n  `;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\n// import { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { Template as Button } from \"@spectrum-css/button/stories/template.js\";\n\nimport \"../index.css\";\nimport \"../skin.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-CoachMark\",\n\tisQuiet = false,\n\twithPopover = false,\n\tvariant,\n\t...globals\n}) => {\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[`${rootClass}Indicator`]: true,\n\t\t\t\t[`${rootClass}Indicator--quiet`]: isQuiet,\n\t\t\t\t[`${rootClass}Indicator--${variant}`]: typeof variant !== \"undefined\",\n\t\t\t})}\n\t\t\tstyle=\"display: inline-block;vertical-align: top;\"\n\t\t>\n\t\t\t<div class=\"${rootClass}Indicator-ring\"></div>\n\t\t\t<div class=\"${rootClass}Indicator-ring\"></div>\n\t\t\t<div class=\"${rootClass}Indicator-ring\"></div>\n\t\t</div>\n\t\t${withPopover\n\t\t\t? html`<div class=\"${rootClass}Popover\" style=\"display: inline-block;\">\n\t\t\t\t\t<div class=\"${rootClass}Popover-header\">\n\t\t\t\t\t\t<div class=\"${rootClass}Popover-title\">Zoom in</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"${rootClass}Popover-content\">\n\t\t\t\t\t\tSwitch to the zoom tool then click and drag in the canvas to move\n\t\t\t\t\t\tyour camera forward and backward.\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"${rootClass}Popover-footer\">\n\t\t\t\t\t\t${Button({\n\t\t\t\t\t\t\t...globals,\n\t\t\t\t\t\t\tsize: \"m\",\n\t\t\t\t\t\t\tvariant: \"primary\",\n\t\t\t\t\t\t\tlabel: \"Okay\",\n\t\t\t\t\t\t\ttreatment: \"outline\",\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t  </div>`\n\t\t\t: \"\"}\n\t`;\n};\n"],"names":[],"sourceRoot":""}